from pwn import *
import time
import base64
from PIL import Image
import numpy as np
def main():
    r = remote('localhost',6464)

    data = r.recvuntil(b"move :")

    board = b"iVBO"+data.split(b"iVBO")[1].split(b"\r\n")[0]
    print(board)

    with open("board.png", "wb") as fh:
        fh.write(base64.decodebytes(board))


    im = Image.open("board.png")
    im = im.convert('RGB')
    size = im.size
    print(size)
    board=""
    for x in range(8):
        for y in range(8):
            c = np.zeros((8,8))
            for i in range(x*8,x*8+8):
                for j in range(y*8,y*8+8):
                    pixel = im.getpixel((j,i))
                    if pixel==(104,104,104) or pixel==(198, 198, 198):
                        c[i%8][j%8]=1 # to reverse symmetry
            #print(x,y,"\n",c)
            for k,v in piece.items():
                if (c==v).all():
                    #print(k)
                    board+=k
            #input()
        if x!=7:
            board+="/"
    print(board)


r = np.array([[0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0],
              [0,0,1,0,1,1,0,0],
              [0,0,1,1,0,0,0,0],
              [0,0,1,0,0,0,0,0],
              [0,0,1,0,0,0,0,0],
              [0,0,1,0,0,0,0,0],
              [0,0,0,0,0,0,0,0]
              ])

n = np.array([[0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0],
              [0,0,1,1,1,0,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,0,0,0,0,0,0]
              ])

b = np.array([[0,0,0,0,0,0,0,0],
              [0,0,1,0,0,0,0,0],
              [0,0,1,0,0,0,0,0],
              [0,0,1,1,1,0,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,1,1,0,0,0],
              [0,0,0,0,0,0,0,0]
              ])

k = np.array([[0,0,0,0,0,0,0,0],
              [0,0,1,0,0,0,0,0],
              [0,0,1,0,0,0,0,0],
              [0,0,1,0,1,0,0,0],
              [0,0,1,1,0,0,0,0],
              [0,0,1,0,1,0,0,0],
              [0,0,1,0,1,0,0,0],
              [0,0,0,0,0,0,0,0]
              ])

q = np.array([[0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0],
              [0,0,0,1,1,0,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,0,1,1,1,0,0],
              [0,0,0,0,0,1,0,0],
              [0,0,0,0,0,1,0,0]
              ])

K= np.array([[0,0,0,0,0,0,0,0],
              [0,0,1,0,0,0,1,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,1,0,0,0],
              [0,0,1,1,0,0,0,0],
              [0,0,1,0,1,0,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,0,1,0]
              ])

Q = np.array([[0,0,0,0,0,0,0,0],
              [0,0,0,1,1,1,0,0],
              [0,0,1,0,0,0,1,0],
              [0,0,1,0,0,0,1,0],
              [0,0,1,0,1,0,1,0],
              [0,0,1,0,0,1,0,0],
              [0,0,0,1,1,0,1,0],
              [0,0,0,0,0,0,0,0]
              ])

R = np.array([[0,0,0,0,0,0,0,0],
              [0,0,1,1,1,0,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,1,1,0,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,0,0,0,0,0,0]
              ])

N = np.array([[0,0,0,0,0,0,0,0],
              [0,1,0,0,0,0,1,0],
              [0,1,1,0,0,0,1,0],
              [0,1,0,1,0,0,1,0],
              [0,1,0,0,1,0,1,0],
              [0,1,0,0,0,1,1,0],
              [0,1,0,0,0,0,1,0],
              [0,0,0,0,0,0,0,0]
              ])

B = np.array([[0,0,0,0,0,0,0,0],
              [0,0,1,1,1,0,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,1,1,0,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,1,1,0,0,0]
              ])

P = np.array([[0,0,0,0,0,0,0,0],
              [0,0,1,1,1,0,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,0,0,1,0,0],
              [0,0,1,1,1,0,0,0],
              [0,0,1,0,0,0,0,0],
              [0,0,1,0,0,0,0,0],
              [0,0,0,0,0,0,0,0]
              ])
p = np.array([[0,0,0,0,0,0,0,0],
              [0,0,1,1,0,0,0,0],
              [0,1,0,0,1,0,0,0],
              [0,1,0,0,1,0,0,0],
              [0,1,1,1,0,0,0,0],
              [0,1,0,0,0,0,0,0],
              [0,1,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0]              
              ])

piece = {"r" : r, "n" : n, "b" : b, "k" : k, "q" : q,"p" : p, "R" : R, "N" : N, "B" : B, "K" : K, "Q" : Q, "P" : P}          


if __name__ == "__main__":
    main()